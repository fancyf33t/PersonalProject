I want to make the dice animate and change to give me a single number between 1-6. 
After I am able to get that done, I will repeat the process. Let's start with using Math functions


Refer here:
https://javascript-tutor.net/jSample/jsp_anidice2.html#:~:text=In%20this%20example%2C%20we%20will%20create%20an%20animated,syntax%20is%20as%20follows%3A%20myVariable%3DsetInterval%28myfunction%2C%20time%20interval%29%20

10/30 I am not entirely sure how i am going to deal with the character sheets outside of just using arrays. let's play around...
this is an example of how to base an encounter on

var idx = Math.floor(Math.random() * nflChampions.length);
var message; //this simply initializes the variable message

if (nflChampions[idx].length === 1) {
    message = `Hello, darkness my old friend. It is me. The ${nflChampions[idx][0]}...`;
} else if (nflChampions[idx].length === 3) {
    console.log(`You might be a champion ${nflChampions[idx][0]}, but you are also charged with the following: ${nflChampions[idx][2]}`)
} else {
    message = `CONGLATURATIONS, ${nflChampions[idx][0]}!!! You have ${nflChampions[idx][1]} championship titles!! Good job!!`;
}

10/31 how to i add more complexity to this idea? this is going to get complicated real quick...

sample of the code that i used for the quick fight system. this nesting loop situation is going to require some real work

if (fight > monster[0][1]) {
    fight_result = 'health test has passed';
} else if (fight > monster[1][1]) {
    fight_result = 'will test has passed';
} else {
    fight_result = 'ouch'
}
console.log(fight_result)

10/31 next i need to make the random dice roll test with my character sheet roll because those numbers on the character sheet indicate how many 'die' get used, not a hard number to test (example: culver has will of 3 which means 3 separate die rolls to get either a 5 or a 6)

1/10/2022
// removing this from the code. i honestly don't think this ever worked
/**start */
// const characterCard = document.getElementById('characterCard');
// let statSection = document.getElementById('statSection');
// statSection.style.display = 'flex';
// statSection.style.justifyContent = 'space-around';

// let div = document.createElement('div');
// let stat1 = document.createElement('div'),
//     stat2 = document.createElement('div'),
//     stat3 = document.createElement('div'),
//     stat4 = document.createElement('div'),
//     stat5 = document.createElement('div');
// stat1.setAttribute('id', 'lore');
// stat2.setAttribute('id', 'influence');
// stat3.setAttribute('id', 'observation');
// stat4.setAttribute('id', 'will');
// stat5.setAttribute('id', 'strength');

// let stats = [
//     stat1, stat2, stat3, stat4, stat5
// ];

// let statStyle = {
//     borderSize: '2px',
//     borderStyle: 'solid',
//     borderColor: 'black',
//     width: '40px',
//     height: '40px'
// }
// stats.forEach(stat => {
//     stat.classList.add('stats');
//     for (let key in dieStyle) {
//         stat.style[key] = statStyle[key];
//     }
//     statSection.appendChild(stat)
// })
/**end */

REMOVED FROM LINE 44
<div class="card mb-3 character-card" id="characterCard">
                            <div class="stat-section" id="statSection"></div>
                            <div class="row no-gutters">
                                <div class="col-md-4">
                                    <img src="media/akachionyele.jpg" alt="Akachi Onyele" class="img-fluid character-img">
                                </div>
                                <div class="col-md-8">
                                    <div class="card-body">
                                        <h5 class="card-title">Akachi Onyele</h5>
                                        <p class="card-text"><em>"The Shaman"</em></p>
                                        <ul class="nav card-stats">
                                            <li class="stats-box" id="stats1"><span id="lore"></span></li>
                                            <li class="stats-box" id="stats2"><span id="influence"></span></li>
                                            <li class="stats-box" id="stats3"><span id="observation"></span></li>
                                            <li class="stats-box" id="stats4"><span id="strength"></span></li>
                                            <li class="stats-box" id="stats5"><span id="will"></span></li>
                                        </ul>
                                        <div class="container">
                                            <div class="row">
                                                <div class="col-4">
                                                    <div class="health-box"></div>
                                                </div>
                                                <div class="col-4">
                                                    <div class="sanity-box"></div>
                                                </div>
                                                <div class="col-4">
                                                    <div class="clues-box"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

1/11/22
looks important for my game display
show(e) {
        e.preventDefault();
        if(e.target.id === 'menuButton') {
            this.menu.style.display = 'block'; //this already makes more sense to me
            this.home.style.display = 'none';
        } else {
            this.menu.style.display = 'none';
            this.home.style.display = 'block';
        }
    }

1/12/22
trying to randomly access my this.encounters information. this is really annoying
let randomEncounter = Object.keys(this.encounters);
            let randomNumber = Math.random();
            let indexEncounter = Math.floor(randomNumber * randomEncounter.length);
            let randomKey = randomEncounter[indexEncounter];
            let randomValue = this.encounters[randomKey];

            console.log(randomKey)
            console.log(randomEncounter)
            console.log(randomValue)
// let randomEncounter = Object.keys(this.encounters);
            // let randomNumber = Math.random();
            // let indexEncounter = Math.floor(randomNumber * randomEncounter.length);
            // let randomKey = randomEncounter[indexEncounter];
            // let randomValue = this.encounters[randomKey];

            // console.log(randomKey)
            // console.log(randomEncounter)
            // console.log(randomValue)
            // encounterDisplay.innerText = randomEncounter;

Removed and edited for easier calling(?)
 // 1/12/22 Not happy about this but I may need to change up how I call on these encounters....
 for (const key in this.encounters) {
                const sceneChange = this.encounters[key];
                console.log(sceneChange.scene) // this much works...
            }
            encounter01: {
                location: 'city',
                scene: 'You wander through the aisles of an antique book store. Although many extremely rare books can be found here, the organizational system is almost impossible to decipher [-1 lore]. If you pass, you\'re able to track down a hidden gem; gain 1 Tome Artifact.',
                // if encounter01, test lore - 1. if 'success', gain arcane.Math.random()*arcanes.length
            },
            encounter02: {
                location: 'city',
                scene: 'The police report that people are being abducted by a monster dwelling in the sewer system. Wandering through the underground tunnels you are suddenly attacked by a deep one [strength]! If you pass, you defeat the creature and rescue its hostage; gain 1 random Ally Asset from the deck. If you fail, lose 1 Health from the struggle.',
                // test strength. if success, gain asset[ally]; add to inventory
            },
            encounter03: {
                location: 'city',
                scene: 'Corrupt members of the police force pressure you for a bribe. You speak to some people you know to take care of the problem [influence]. If you pass, the police are apologetic and share their leads with you; spawn 1 Clue. If you fail, gain a Debt Condition to pay the bribe.',
                // test lore; if success, clue + 1 else condition[debt]
            },
            encounter04: {
                location: 'city',
                scene: 'Legends say that this cemetery is haunted. Exploring the headstones, you encounter an angry specter, eager to share his story. The experience is nerve-wracking, but you try to listen [will]. If you pass, the spirit gratefully fades from view; recover 2 Sanity. If you fail, his desperate voice echoes in your mind; gain a Paranoia Condition.',
                // test will; if success, sanity + 2 else condition[paranoia]
            },
            encounter05: {
                location: 'city',
                scene: 'The shop is robbed while you are browsing! You attempt to fend off the thieves [strength]. If you pass, the store owner is very gracious; gain 1 Item Asset from the reserve or 1 random Item Asset from the deck. If you fail, lose 1 Health and discard 1 Item possession.',
                // test strength; if success, asset random else health -1
            },
            encounter06: {
                location: 'city',
                scene: 'The police ask for your help investigating a series of ritual killings. The grisly crime scenes threaten to overwhelm you with chills and nausea [will]. If you pass, you manage to examine the scene and find significant information; spawn 1 Clue. If you fail, you can\'t endure the horror; lose 2 Sanity.',
                // test will; if success, clue + 1 else sanity - 2
            },
            encounter07: {
                location: 'city',
                scene: 'The Syndicate is rengaged in a gang war with local thugs and is under intense legal scrutiny. You try to trade your political clout for assistance [influence]. If you pass, gain 1 Service Asset from the reserve or 1 random Service Asset from the deck.',
                // test influence; if success inventory + asset.service
            },
            encounter08: {
                location: 'city',
                scene: 'A group of intimidating Syndicate members demand you pay them for protection. You offer the well-dressed men what you can afford [influence]. If you fail, they make sure you meet with an accident; gain a Leg Injury Condition.',
                // figure it out
            },
            encounter09: {
                location: 'city',
                scene: 'A friendly game of cards ends with a very high-stakes hand [influence]. If you pass, you amaze everyone watching and find a new friend; gain 1 random Ally Asset from the deck. If you fail, gain a Debt Condition to cover the loss.',
                // figure it out
            },
            encounter10: {
                location: 'city',
                scene: 'A shady figure offers to sell you a weapon, no questions asked. You speak with him to detrmine his motives [influence]. If you pass, gain 1 random Weapon Asset from the deck. If you fail, the undercover policeman arrests you; gain a Detained Condition.',
                // figure it out
            },

1/13/2022
Running into a slight problem with DOM (because of course)
for (const key in this.monsters) {
            const monster = this.monsters[key]
            const mnsDisplay = document.createElement('div');
            mnsDisplay.className = 'monster-display';
            monsterDisplay.innerHTML += `
            <h4 class="monster-name">${monster.name}</h4>
            <img src=${monster.img}>
            </div>
            `;
            statDisplay.innerHTML += `
            <p class="monster-stat">${monster.health} ${monster.sanity}</p>
            `
        }

1/14/2022
I am very damn close to figuring this out. Maybe I will use DOM to push only the list items themelves
for (const key in this.assets) {
            const asset = this.assets[key]
            const assetList = document.createElement('ul');
            assetList.className = "nav asset-list justify-content-around"
            assetList.innerHTML = `
            <li class="list-item" id="assetCard">${asset.name}</li>
            `

            if (storeCount < 3) {
                storeRow.append(assetList)
            } else {
                console.log('this doesn\'t work')
            }
            storeCount++
        }

Apply the following changes to your current code
show(e) {
        e.preventDefault();
        if(e.target.id === 'menuButton') {
            this.menu.style.display = 'block'; //this already makes more sense to me
            this.home.style.display = 'none';
        } else {
            this.menu.style.display = 'none';
            this.home.style.display = 'block';
        }
    }

// 1/18/22 I am woefully stuck. I don't know how I am going to fix this. I really might have bitten off more than I can chew...
            let search = sceneChange
            // search the box for key words
            let strength = search.includes("strength"),
                lore = search.includes("lore"),
                observation = search.includes("observations"),
                will = search.includes("will");
            // initialize the boxes you want changed upon certain conditions
            let stat1 = document.getElementById('stat1'),
                stat2 = document.getElementById('stat2'),
                stat3 = document.getElementById('stat3'),
                stat4 = document.getElementById('stat4'),
                stat5 = document.getElementById('stat5');
            let clues = document.getElementById('clueBox');
            


1/17/2022
there is no way i will be able to do what i want. i just am not smart enough for this... 

1/19/2022
console.log(encounters[Object.keys(encounters)[Math.floor(Math.random() * Object.keys(encounters).length)]]);